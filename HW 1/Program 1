#!/usr/bin/env python

#This is a PigLatin Generator.

__author__= 'scweiser'
__email__='scweiser@ucsc.edu'
__credits__='Partner = Vince Del Prado: vdelprad@ucsc.edu'

vowels=['a','e','i','o','u']
numbers=['0','1','2','3','4','5','6','7','8','9']
wordsToPigLatin = {"artichoke": "artichokay", "stipple": "ipplestay", "123re": "123re", "soup": "oupsay"} #this is a dictionary of words and their correct piglatin translations


def pigLatinGen(engword):
    """
    this function handles pigLatin for word engword

    Args:
		engword: a word

    Returns:
        pigLatined: a PigLatin representation of word engword

    Raises:
        Nothing
    """
    if engword[0] in vowels: #this loop is for words that start in a vowel
        if engword[-1] in vowels:
            return engword[:-1]+'ay' #if the word starts and ends with a vowel, this returns the word without the final vowel + 'ay'
        else:
            return engword+'ay' #if the word starts with a vowel and does not end with a vowel, this returns the word + 'ay'
    elif engword[0] in numbers: #if the word begins with a number, return the original word
        return engword
    else: #this is for words that start with a consonant
        for i in range (0,len(engword)):
            if engword[i] not in vowels:
                continue  #this skips through all non-vowels
            else:
                onset = engword[0:i]
                rest = engword[i:]
                return rest+onset+'ay' #this stops on the first vowel and splits the word into onset and rest

if __name__ == "__main__":

    for word in wordsToPigLatin:
        pg = pigLatinGen(word)
        ans = wordsToPigLatin[word]
        if pg == ans:
            result = "PASS"
        else:
            result = "FAIL"
        print word, pg, result #this tests whether the words generated by pigLatinGen match the answer key.