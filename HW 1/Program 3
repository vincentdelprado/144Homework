#!/usr/bin/env python

#This is a PigLatin Generator.

__author__= 'scweiser'
__email__='scweiser@ucsc.edu'
__credits__='Partner = Vince Del Prado: vdelprad@ucsc.edu'

vowels=['a','e','i','o','u']
numbers=['0','1','2','3','4','5','6','7','8','9',',','.']

def pigLatinGen(engword):
    """
    this function handles pigLatin for word engword

    Args:
		engword: a word

    Returns:
        pigLatined: a PigLatin representation of word engword

    Raises:
        Nothing
    """
    if engword.isupper() is True:
        return engword
    elif engword[0] in vowels: #this loop is for words that start in a vowel
        if engword[-1] in vowels:
            return engword[:-1]+'ay' #if the word starts and ends with a vowel, this returns the word without the final vowel + 'ay'
        elif engword[-1] is 'y':
            return engword+'ay' #this excludes word final 'y' from the 'way' dialect.
        elif engword[-1] is 'm':
            return engword+'ay' #this excludes 'am' from the 'way' dialect.
        else:
            return engword+'way' #if the word starts with a vowel and does not end with a vowel, this returns the word + 'ay'
    elif engword[0] in numbers: #if the word begins with a number or punctuation, return the original word
        return engword
    else: #this is for words that start with a consonant
        for i in range (0,len(engword)):
            if engword[i] not in vowels:
                continue  #this skips all non-vowels
            else:
                onset = engword[0:i]
                rest = engword[i:]
                return rest+onset+'ay' #this stops on the first vowel and splits the word into onset and rest

def pigLatinSent(sentence):
    """
    this function handles pigLatin for strings sentence

    Args:
		sentence: a sentence in English

    Returns:
        pgString: a PigLatin representation of string sentence

    Raises:
        Nothing
    """

    sentSplitPer = sentence.replace('.',' .') #these space periods and commas from the words they are next to
    sentSplitPerCom = sentSplitPer.replace(',',' ,')
    splitSent = sentSplitPerCom.split(' ') #this splits the word into a list for every space
    pgListOut = [] #creates an empty list for the piglatin translation to be added to
    for word in splitSent:
        pgListOut.append(pigLatinGen(word)) #translates every word and appends it to pgListOut
    pgString = ' '.join(pgListOut) #joins the list into a string
    pgString = pgString.replace(' .','.')#these take away the spaces before commas and periods.
    pgString = pgString.replace(' ,',',')
    return pgString



if __name__ == "__main__":
    #this tests if the output is correct
    inputLine = "if you think, sadly, that he will actually visit, then I am fine."
    key = "ifway ouyay inkthay, adlysay, atthay ehay illway actuallyay isitvay, enthay I amay inefay."
    pg = pigLatinSent(inputLine)
    if pg ==key:
        result = "PASS"
    else:
        result = "FAIL"
    print inputLine
    print pg
    print result